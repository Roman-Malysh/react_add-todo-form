{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","newUsers","App","useState","selectedUserId","setSelectedUserId","setTitle","list","setList","errorUser","showErrorUser","errorTitle","showErrorTitle","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","ananas","type","value","placeholder","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,uBCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCJ,EAAgBI,EAAhBJ,KAAME,EAAUE,EAAVF,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCHMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,UACAN,EAEEI,EAFFJ,KACAL,EACES,EADFT,GAGF,OACE,0BACE,UAASA,EACTM,UAAWM,IACT,WACA,CACE,sBAAuBD,IAL7B,UASE,oBAAIL,UAAU,kBAAd,SAAiCI,IAEhCL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCpBlBQ,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,UCHtB,SAASO,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAACd,GAAD,OAAUA,EAAKL,KAAOiB,MAEzC,KAGtB,IAAMG,ECdS,CACb,CACEpB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDHqBF,KAAI,SAACN,GAAD,mBAAC,eACjCA,GADgC,IAEnCJ,KAAMW,EAAQP,EAAKQ,aAGRI,EAAM,WACjB,MAA4CC,mBAAS,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOZ,EAAP,KAAce,EAAd,KACA,EAAwBH,mBAASF,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAmCL,oBAAS,GAA5C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAAqCP,oBAAS,GAA9C,mBAAOQ,EAAP,KAAmBC,EAAnB,KA8CA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBAAM0B,OAAO,aAAaC,OAAO,OAAOC,SA3CzB,SAACC,GAWlB,GAVAA,EAAMC,iBAED1B,EAAM2B,QACTN,GAAe,GAGZR,GACHM,GAAc,GAGZnB,EAAM2B,QAAUd,EAAgB,CAClC,IAAMe,EAAgB,CACpBtC,GAAIuC,KAAKC,IAAL,MAAAD,KAAI,YAAQb,EAAKX,KAAI,SAACN,GAAD,OAAUA,EAAKT,QAAO,EAC/CU,MAAOA,EACPC,WAAW,EACXM,OAAQM,EACRlB,KAAMW,EAAQO,IAGhBI,GAAQ,SAACc,GAAD,4BAAgBA,GAAhB,CAAwBH,OAxBlCb,EAAS,IACTD,EAAkB,KA8ChB,UACE,gCACE,sBAAKlB,UAAU,QAAf,UACE,uBACEoC,KAAK,OACL,UAAQ,aACRC,MAAOjC,EACPkC,YAAY,uBACZC,SArBQ,SAACV,GACnB,IAAQQ,EAAUR,EAAMW,OAAhBH,MAERlB,EAASkB,GACTZ,GAAe,GAEfN,EAASkB,EAAMI,QAAQ,8BAA+B,QAiB7CjB,GAAc,sBAAMxB,UAAU,QAAhB,qCAGjB,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRuC,SAlCO,SAACV,GAClBX,GAAmBW,EAAMW,OAAOH,OAChCd,GAAc,IAiCJc,MAAOpB,EAHT,UAKE,wBAAQoB,MAAM,IAAIK,UAAQ,EAA1B,2BAGC9B,EAAgBH,KAAI,SAACV,GAAD,OACnB,wBAAQsC,MAAOtC,EAAKL,GAApB,SACGK,EAAKJ,MADqBI,EAAKL,UAMrC4B,GAAa,sBAAMtB,UAAU,QAAhB,wCAIlB,wBAAQoC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,yBAASpC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUQ,MAAOY,UE9GzBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.47bfd6c3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../api/types/User';\n\nexport type Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n  \n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../api/types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../api/types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC <Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './api/types/User';\nimport { Todo } from './api/types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst newUsers = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [list, setList] = useState(newUsers);\n  const [errorUser, showErrorUser] = useState(false);\n  const [errorTitle, showErrorTitle] = useState(false);\n\n  const handleClear = () => {\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const formSubmit = (event: React.FocusEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      showErrorTitle(true);\n    }\n\n    if (!selectedUserId) {\n      showErrorUser(true);\n    }\n\n    if (title.trim() && selectedUserId) {\n      const newTodo: Todo = {\n        id: Math.max(...list.map((todo) => todo.id)) + 1,\n        title: title,\n        completed: false,\n        userId: selectedUserId,\n        user: getUser(selectedUserId),\n      };\n\n      setList((ananas) => [...ananas, newTodo]);\n      handleClear();\n    }\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    showErrorUser(false);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n    showErrorTitle(false);\n\n    setTitle(value.replace(/[^A-Za-z\\s\\d\\u0400-\\u04FF]/g, ''));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={formSubmit}>\n        <div>\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Please enter a title\"\n              onChange={handleTitle}\n            />\n            {errorTitle && <span className=\"error\">Please enter a title</span>}\n          </div>\n\n          <div className=\"field\">\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleUser}\n              value={selectedUserId}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map((user) => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {errorUser && <span className=\"error\">Please choose a user</span>}\n          </div>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={list} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}